def func2(arg21, arg22):
    var46 = var25(arg21, arg22)
    if arg21 < var46:
        var51 = class7()
    else:
        var51 = class9()
    for var52 in xrange(15):
        var53 = var51.func8
        var53(arg21, var52)
    var59 = func11(arg21, arg22)
    var64 = func12(arg21, arg22)
    var65 = arg22 ^ var59
    var66 = -986 | var46
    var67 = arg22 | arg21
    var68 = (var66 + var46) ^ var65 - var59
    var69 = var64 & (arg21 + arg22) & var46
    var70 = var68 | var68
    var71 = var64 - -759384643 & -832 - var64
    if var64 < arg22:
        var72 = (var70 | (var46 & var59)) ^ var59
    else:
        var72 = var46 & -289
    var73 = var66 - (var71 ^ var70) - var69
    var74 = arg22 | ((-47 & var69) + var66)
    var75 = (401 & var66) | arg21 & var69
    var76 = ((var67 ^ var75) - var46) & 1259911717
    var77 = (var59 | var69) & arg22 - var73
    var78 = var74 + var59
    var79 = var67 & var46 | var65 + var71
    var80 = (var78 ^ var70) & var66
    var81 = var77 - arg21 & -496 + var77
    var82 = var46 + var78
    var83 = ((var75 & arg21) - var68) | 1497241777
    var84 = var80 - (var73 - var83 & var65)
    var85 = var81 & (var77 | var64 + var78)
    var86 = var82 ^ var59 ^ var69
    if arg21 < var73:
        var87 = var77 - (var46 + var74 + var66)
    else:
        var87 = var82 + var66 ^ var79
    result = var75 ^ (var73 + var77 & var76 + (var76 ^ ((((var74 & (var75 + var67)) | var46) & var80) - var64))) + var65
    return result
def func12(arg60, arg61):
    var62 = 0
    for var63 in xrange(7):
        if var63 < arg60:
            var62 += arg61 - 6
        else:
            var62 += var63 - arg60
    return var62
def func11(arg54, arg55):
    var56 = arg54 & -344 - -2107864104 + arg54
    if arg54 < arg55:
        var57 = (arg54 & var56 ^ 349 ^ -967 | arg54 | var56 & arg55) & (arg55 | arg54)
    else:
        var57 = var56 - arg54
    var58 = (-1516511416 + (arg54 & arg54) ^ ((-650023650 & arg55 & ((-517356186 + arg55 + -1626744877) | -37933795 | (var56 | -61) - ((311 + (-642 & (-876 + 509 - 176)) & -378) ^ var56 & arg54))) + arg54 - var56)) | var56
    result = arg54 & 277 | (-48 ^ var56) & (((-929 & arg55) + 824) ^ var58) + (318 - arg55) & var56 ^ arg55
    return result
class class9(object):
    def func8(self, arg49, arg50):
        result = ((0 - arg50 - 395804172 - arg50 & arg50) & arg49) & arg50
        return result
class class7(object):
    def func8(self, arg47, arg48):
        return 0
def func5(arg26, arg27):
    var32 = func6(arg26, arg27)
    var33 = arg27 - arg26
    var34 = 52077152 ^ (var33 & (var32 & var32))
    var35 = var34 | (var33 & var34)
    var36 = var34 & arg27
    var37 = var32 | 1236301730 | var35 ^ var32
    var38 = var32 & arg26
    if var37 < var37:
        var39 = ((arg27 | var34) | 485) + var35
    else:
        var39 = (var37 + var36 | arg27) & var34
    var40 = var34 + var34 - var32
    var41 = var37 ^ var32
    var42 = ((var32 + var33) & 836) - 157
    var43 = arg27 & var36 - var38 + 435442466
    var44 = var38 ^ var32
    var45 = var43 | (var44 ^ var42)
    result = ((var37 ^ (var37 - var40) & var44) - (var43 & 1396353355 & -411) & var45 | var36 | -347) ^ var37 & -589
    return result
def func6(arg28, arg29):
    var30 = 0
    for var31 in range(23):
        var30 += (var30 & var31) | var31
    return var30
def func4():
    closure = [-10]
    def func3(arg23, arg24):
        closure[0] += func5(arg23, arg24)
        return closure[0]
    func = func3
    return func
var25 = func4()
def func1(arg1, arg2):
    var3 = arg2 - arg2 + -622 - 63
    var4 = arg1 | -767
    var5 = (var3 | arg1) & arg1 ^ 695
    var6 = (arg2 | var3 & arg2) | var3
    var7 = 143003086 ^ arg1
    var8 = var4 - arg1 - var3 & arg1
    var9 = var5 ^ arg1
    var10 = arg2 & var4
    var11 = arg1 | var5
    var12 = var7 - (arg2 ^ arg2 & var6)
    var13 = var6 | (arg1 | var5) + var3
    if var13 < var6:
        var14 = var12 - arg2 ^ var4
    else:
        var14 = (var12 - var13) + var8 | var8
    var15 = (var6 | var8 + var5) | arg1
    var16 = (arg1 & var15 ^ 1534554479) - arg1
    var17 = (var6 + var10 ^ var12) + var11
    var18 = var15 + (var7 - var9 | var10)
    var19 = var13 | 685
    var20 = (var4 & var6 ^ var13) - var19
    result = (var9 & var18) ^ var6
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 21'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 88'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
